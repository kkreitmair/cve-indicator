import json
import hashlib
import os
import yaml


class FileHandler():
    def finish_json(self, json_obj, instance):
        meta_data = json_obj.get('meta_data')
        output_filename = 'indicator-{}-{}.json'

        json_string = str(json.dumps(json_obj)).encode(encoding='UTF-8')
        hasher = hashlib.new('sha256')
        hasher.update(json_string)

        if instance == 'gen_list':
            filename = output_filename.format(instance, hasher.hexdigest()[:7])
            meta_cpes = meta_data.get('cpe_list_generator_data')
            meta_cpes['report_id'] = hasher.hexdigest()
            meta_cpes['report_filename'] = filename
            meta_data['cpe_list_generator_data'] = meta_cpes

        if instance == 'get_cves':
            filename = output_filename.format(instance, hasher.hexdigest()[:7])
            meta_cves = meta_data.get('cve-indicator_get-cves')
            meta_cves['report_id'] = hasher.hexdigest()
            meta_cves['report_filename'] = filename
            meta_data['cve-indicator_get-cves'] = meta_cves

        json_obj['meta_data'] = meta_data
        self.whrite_json_data(filename, json_obj)

    def loadConfig(self):
        filename = '/.config/cve-indicator.yml'
        config_file = os.path.expanduser('~') + filename

        try:
            with open(config_file) as ymlfile:
                content = yaml.load(ymlfile)
        except (FileNotFoundError, IsADirectoryError):
            exit("The config file doesn't exist or is an directory.")

        if content is None:
            exit('Nothing is specified in config file.')
        return content

    def load_json_data(self, path):
        if not os.path.isfile(path):
            exit("The given filepath doesn't exist or is an directory.")

        abspath = os.path.abspath(path)

        with open(abspath, 'r') as f:
            json_data = json.load(f)

        return json_data

    def whrite_json_data(self, path, data):
        with open(path, 'w') as f:
            json.dump(data, f, indent=4, sort_keys=True)
        print("The File with the results was saved under:\n" +
              os.path.abspath(path))
